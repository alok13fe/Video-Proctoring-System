services:
  redis:
    image: redis:latest
    container_name: my-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data 

  frontend: 
    build: 
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_BASE_URL=http://http-backend:4000/api/v1
      - NEXT_PUBLIC_WS_URL=ws://ws-backend:1234
    depends_on:
      - http-backend
      - ws-backend
      - worker

  http-backend:
    build: 
      context: .
      dockerfile: docker/Dockerfile.http-backend
      args:
        - DATABASE_URL=${DATABASE_URL}
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=${JWT_EXPIRY}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}

  ws-backend:
    build: 
      context: .
      dockerfile: docker/Dockerfile.ws-backend
      args:
        - DATABASE_URL=${DATABASE_URL}
    ports:
      - "1234:1234"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redis

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://http-backend:4000/api/v1
    depends_on:
      - http-backend
      - redis

volumes:
  redis_data: 